[gd_scene load_steps=13 format=2]

[ext_resource path="res://assets/textures/bg1.png" type="Texture" id=1]
[ext_resource path="res://world/env.gd" type="Script" id=2]
[ext_resource path="res://characters/player/PlayerFog.gd" type="Script" id=3]

[sub_resource type="Environment" id=1]
background_mode = 4
background_color = Color( 0.980392, 0, 0, 1 )
ambient_light_color = Color( 1, 1, 1, 1 )
auto_exposure_scale = 0.15
auto_exposure_max_luma = 0.19
auto_exposure_speed = 12.16
glow_enabled = true
glow_intensity = 6.21
glow_strength = 0.56
glow_bloom = 0.11
glow_blend_mode = 0
glow_bicubic_upscale = true
glow_high_quality = true
adjustment_enabled = true
adjustment_brightness = 0.81
adjustment_saturation = 0.8

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

uniform float minimum: hint_range(0.0,1.0) = 0.3;
uniform float maximum: hint_range(0.0,10.0) = 3.0;
uniform float grain: hint_range(0.0,1.0) = 0.2;

float random (vec2 st) {
    return fract(sin(dot(st.xy,
                         vec2(12.9898,78.233)))*
        43758.5453123);
}


void fragment() {
	COLOR.a = max(0.0,(distance(UV,vec2(0.5,0.5))-minimum)*maximum) + random(UV+TIME/1000000.0)*grain;
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/minimum = 0.189
shader_param/maximum = 2.35
shader_param/grain = 0.058

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

uniform sampler2D noise;
uniform sampler2D noise2;
uniform float r = 2.0;
uniform vec2 camera_position;
uniform vec2 pc_position;
uniform float density: hint_range(0.0,1.0) = 0.6;

float tw(float a) {
	return mod(a+0.5,1.0)-0.5;
}

void fragment() {
	vec2 NUV = SCREEN_UV;
	vec2 px = TEXTURE_PIXEL_SIZE*r;
	vec2 offset = vec2(texture(noise,vec2(TIME)).r);
	float n1 = texture(noise,NUV+camera_position/vec2(600.0,-360.0)-mod(TIME/20.0,1.0)).r;
	float n2 = texture(noise,NUV+camera_position/vec2(600.0,-360.0)+TIME/50.0).r;
	COLOR.a = density - abs(n1*n2+0.1);
	//vec2 np = UV;
	//np.x = clamp(np.x,0.1*px.x,1.0-0.1*px.x);
	//np.y = clamp(np.y,0.1*px.y,1.0-0.1*px.y);
	//COLOR.a -= distance(np,UV)*5.0;
	float x1 = SCREEN_UV.x;
	float y1 = SCREEN_UV.y;
	vec2 d = vec2(1.0,-1.0)*pc_position+vec2(0.0,1.0);
	float x2 = d.x;
	float y2 = d.y;
	float dist = sqrt(pow(x1-x2,2.0)+pow(y1-y2,2.0)*9.0/16.0);
	COLOR.a += dist*2.0-0.5;
	COLOR.a = max(COLOR.a,0.0);
}"

[sub_resource type="OpenSimplexNoise" id=9]
octaves = 2
period = 24.3
persistence = 1.0
lacunarity = 0.1

[sub_resource type="NoiseTexture" id=5]
seamless = true
noise = SubResource( 9 )

[sub_resource type="OpenSimplexNoise" id=10]
seed = 9
octaves = 2
period = 24.3
persistence = 1.0
lacunarity = 0.1

[sub_resource type="NoiseTexture" id=7]
as_normalmap = true
noise = SubResource( 10 )

[sub_resource type="ShaderMaterial" id=11]
shader = SubResource( 8 )
shader_param/r = 2.227
shader_param/camera_position = null
shader_param/pc_position = Vector2( 0, 0 )
shader_param/density = 0.6
shader_param/noise = SubResource( 5 )
shader_param/noise2 = SubResource( 7 )

[node name="WorldEnvironment" type="WorldEnvironment"]
environment = SubResource( 1 )
script = ExtResource( 2 )

[node name="ScreenShader" type="CanvasLayer" parent="."]
layer = 60

[node name="vignette" type="ColorRect" parent="ScreenShader"]
visible = false
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_scale = Vector2( 0.6, 0.6 )
motion_mirroring = Vector2( 2880, 1620 )

[node name="Bg1" type="Sprite" parent="ParallaxBackground/ParallaxLayer"]
position = Vector2( 581, 243 )
scale = Vector2( 1.5, 1.5 )
texture = ExtResource( 1 )

[node name="PlayerFog" type="CanvasLayer" parent="."]
visible = false
script = ExtResource( 3 )

[node name="ColorRect" type="ColorRect" parent="PlayerFog"]
material = SubResource( 11 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -3396.0
margin_top = -2547.0
margin_right = 2604.0
margin_bottom = 3453.0
